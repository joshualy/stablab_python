import sys, os
from combustion.ps_comb import profilesolver,profile_F, Flinear,double_profile_F,profile_boundary_conditions
import pickle
import bin.EvansDF
np = bin.EvansDF.np
import bin.EvansBin as EvansBin
from scipy import linalg

def plot_this_profile(solution, interval,n_points,filestring,s):
	import pylab
	x = np.linspace(interval[0],interval[1], n_points)
	y1 = solution(x)
	y2 = solution(-x)

	n = s['n']
	fig = pylab.figure() 
	for j in range(0,n):
		pylab.plot(x, y1,'k')
		pylab.plot(np.flipud(-x),np.flipud(y2) ,'k')
		
	format = '.eps'
	fig.savefig('Testing/'+filestring+format)
	pylab.show()
	return 0
	
def func_init():
	#
	# Parameters 
	# 
	p={'beta':3.5,'tau': 0.1}#,'temp_n':200} 
	
	#
	# Structure variables
	# 
	s={'I':16.0,'R':16.0,'L':-32.0}
	s['rarray'] = range(0,4) # 1:4
	s['larray'] = range(4,8) # 5:8
	s['n'] = 4; s['side']=1
	
	s['PFunctions'] = 'combustion.Evans_comb' # Must be called before calling emcset
	[s,e,m,c] = bin.EvansDF.emcset(s,'front',2,2,'reg_reg_polar')
	m['method'] = bin.EvansDF.EvansBin.mod_drury; 
	m['options'] = {'RelTol':1e-8,'AbsTol':1e-8}

	s['flag'] = 'NA' 
####################################################################
# 	s['flag'] = 'restarting'
# 	File = open('combustion/combustion_Data/restart_combustion.pkl','rb')
# 	comb_Dict = pickle.load(File)
# 	p['beta'] = comb_Dict['beta']
# 	s['I'] = comb_Dict['I']; 
# 	s['R'] = 8.4*np.exp(0.54*p['beta']);  s['L'] = -s['R']
# 	s['solution'] = comb_Dict['solution']
# 	p['speed'] = s['solution'](0)[3]
	return s,p
	
s,p = func_init()

os.system('clear')
print '''Profile computation: Continuation of traveling wave. '''
s,p,solution, problem = profilesolver(s,p)
